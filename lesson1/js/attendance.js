/*
Кекс начал вести свой видеоблог c хайповым названием «Видеоблох».
Он рассказывает про еду для котов, технику внезапных прыжков от стены...

Кексу нужно понять, находит ли его контент отклик у других котов,
поэтому он завёл счётчик посетителей.

Вам нужно написать программу, которая поможет Кексу оценить посещаемость.
В разные дни в блог может заходить разное количество людей, но главное,
чтобы среднее количество посещений первое время не опускалось ниже 1000.
Рекомендуемое среднее значение посещаемости хранится в переменной expectedUsers.

Если посещаемость упадёт, нужно будет дать Кексу рекомендации.

Чтобы отслеживать популярность блога и динамику роста посещаемости,
Кекс купил у сторонних разработчиков программу, которая отрисовывает значения
на графике. Запустить эту программу можно специальной командой keks.plot().

Команда строит график по всем переданным параметрам, кроме последнего.
Последнее значение она отрисовывает горизонтальной линией,
чтобы можно было оценить,
насколько каждая из точек графика отклоняется от рекомендуемого значения.

Нужно добавить в программу расчёт среднего количества посещений за наблюдаемый период.
Среднее значение считается по формуле: сумма всех значений, поделённая на их количество.

Данные о провалах (низкой посещаемости) необходимо собрать в отдельный массив
и вывести его на второй график.

Чтобы сохранить согласованность с первым графиком, мы будем формировать массив с провальными днями в том же цикле, в котором суммируем посещаемость. Если посещаемость в i-й день хорошая, то будем записывать в i-й элемент массива провалов ноль, если посещаемость плохая, будем записывать туда величину провала.

Чтобы посчитать величину провала будем из ожидаемого значения вычитать фактическое значение посещаемости. Например:

Посещаемость в пятый день составила 681 человек.
Разность ожидаемой посещаемости и фактической: 1000 - 681 = 319.
Значит 319 человек — величина провала посещаемости в пятый день.
*/
var expectedUsers = 1000;

var usersByDay = [817, 1370, 752, 1247, 681, 1120, 915, 1281, 875, 1341, 757, 610, 812, 1170, 769, 1261, 845, 1289, 515, 1247, 845, 1311, 741, 1239, 812, 638, 877, 1242, 1159, 1372];

// Рисуем график посещаемости
keks.plot(usersByDay, expectedUsers);

// Суммируем посещаемость и анализируем провалы
var totalUsers = 0;
var minUsers = expectedUsers - 100;
var badDays = [];

for (var i = 0; i <= usersByDay.length - 1; i++) {
    totalUsers += usersByDay[i];
    if (usersByDay[i] < minUsers) {
        badDays[i] = expectedUsers - usersByDay[i];
    } else {
        badDays[i] = 0;
    }
}

keks.plot(badDays, 100);

// Рассчитываем среднее значение посещаемости
var averageUsers = totalUsers / usersByDay.length;
console.log('Средняя посещаемость: ' + averageUsers);

if (averageUsers > expectedUsers) {
    console.log('Посещаемость великолепна. Продолжай в том же духе!');
} else {
    console.log('Посещаемость так себе. Нужно поднапрячься!');
}