/*
Аппетит приходит во время еды. Босс случайно заметил программу,
считающую количество набранных очков до первого промаха.
Теперь он передаёт вам привет и новую задачу: драйвер для игрового дартс-автомата.

Правила работы автомата:

Каждая игра начинается с 0 очков.
Чтобы выиграть, нужно набрать 100 и более очков.
В процессе игры можно совершить не более трёх промахов, иначе проиграешь.

Действия внутри цикла должны будут выглядеть так:

1. Получаем результат броска.

2. Проверяем, что результат броска меньше нуля.
Если это так, то переходим к шагу три, иначе к шагу четыре.

3. Пишем в консоль про промах и увеличиваем счётчик промахов на единицу.

4. Увеличиваем общий результат total и выводим результат броска в консоль.

Нам нужно, чтобы:

Проверка на общее количество промахов гарантированно выполнялась на каждом витке цикла.
По достижении трёх промахов игра бы сразу завершалась.
Поэтому проверку на общее количество промахов надо делать в самом начале цикла,
ещё до выполнения броска и получения его результата.

Нам нужна команда, которая будет прерывать выполнение цикла.

Такой командой в JavaScript является оператор break.
Добавим в начало цикла проверку количества промахов
и как только промахов станет три — выходим из цикла.

Аналогично оператору прерывания цикла break
существует оператор для быстрого перехода к следующей итерации цикла continue,
но используют его крайне редко, так как он усложняет чтение кода и понимание работы цикла в целом.
Использование continue без необходимости обычно является дурным тоном.

Внутри while команда continue «перематывает» программу сразу к началу следующей итерации.
Внутри for команда continue «перематывает» программу к дополнительной части текущей итерации (третьей части),
после выполнения которой начинается следующая итерация цикла.

Когда подсчёты очков и промахов завершены, нужно вывести результаты:
победа или поражение, - и статистику, включающую количество набранных очков и количество промахов.

Как определить победу или поражение?
Если после цикла количество очков больше или равно 100, то это победа. Иначе это поражение.
*/

var score = 0;
var total = 0;
var victoryPoints = 100;
var misses = 0;

while (total < victoryPoints) {
    if (misses >= 3) {
        break;
    }

    score = keks.getScore();

    if (score < 0) {
        console.log('Промах!');
        misses++;
    } else {
        total += score;
        console.log('Результат броска: ' + score);
    }
}
if (total >= victoryPoints) {
    console.log('Победа! Очков: ' + total + ', промахов: ' + misses);
} else {
    console.log('Проигрыш. Очков: ' + total + ', промахов: ' + misses);
}